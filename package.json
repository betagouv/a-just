{
  "name": "a-just",
  "version": "3.0.1",
  "engines": {
    "node": "22"
  },
  "scripts": {
    "db:build": "docker compose -f docker-compose.yml -f docker-compose.dev.yml build",
    "db:start": "docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d",
    "test": "npm run test:e2e",
    "test:api": "docker compose -p test-api -f docker-compose.test.yml build && docker compose -p test-api -f docker-compose.test.yml run --rm api; exitcode=$?; docker compose -p test-api -f docker-compose.test.yml down; exit ${exitcode}",
    "test:e2e": "NODE_ENV=test docker compose -p test-e2e -f docker-compose-e2e.test.yml build && docker compose -p test-e2e -f docker-compose-e2e.test.yml run --rm cypress; exitcode=$?; if [ $exitcode -ne 0 ]; then echo '=== docker compose ps (test-e2e) ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml ps || true; echo '=== logs: api_sandbox ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml logs --no-color api_sandbox || true; echo '=== logs: api ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml logs --no-color api || true; echo '=== logs: front_sandbox ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml logs --no-color front_sandbox || true; echo '=== logs: front ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml logs --no-color front || true; echo '=== logs: db ==='; docker compose -p test-e2e -f docker-compose-e2e.test.yml logs --no-color db || true; fi; docker compose -p test-e2e -f docker-compose-e2e.test.yml down; exit ${exitcode}",
    "build": "npm run build:api && npm run build:front-admin && npm run build:front && npm run build:package",
    "build:api": "cd api && npm install --include=dev && npm run build && cd ..",
    "build:front-admin": "cd front-admin && npm install --force --include=dev && npm run build && mv dist/browser ../api/dist/front-admin && cd ..",
    "build:front": "cd front && npm install --force --include=dev && npm run build && mv dist/browser ../api/dist/front && cd ..",
    "build:package": "cp package.json ./api/dist/.",
    "start:production": "cd api && npm run start:production"
  },
  "dependencies": {
    "axios": "^1.10.0"
  }
}
