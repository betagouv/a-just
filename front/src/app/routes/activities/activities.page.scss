@import '../../styles/utils.scss';

@property --percent {
  syntax: "<number>";
  initial-value: 0;
  inherits: false;
}
@property --temp {
  syntax: "<number>";
  initial-value: 0;
  inherits: false;
}
@property --v1 {
  syntax: "<integer>";
  initial-value: 0;
  inherits: false;
}

.container {
  display: flex;
  flex-direction: column;
  height: 100%;

  background-color: fColor(activityBgColor);

  .content-list {
    flex: 1;
    overflow: auto;
    width: 100%;
    
    .column-item {
      &:last-child {
        width: 200px;
      }
      
      > div {
        width: 92px;
        display: flex;
        align-items: center;

        &:first-child {
          align-self: stretch;
        }

        > input,
        > span {
          margin: 0 8px;
        }

        > span {
          position: relative;

          > i {
            position: absolute;
            right: 3px;
            top: 13px;

            &.data-changed {
              color: fColor(darkModeTitle);
            }
          }

          > input {
            padding-right: 180px;
          }
        }

        > p {
          text-align: center;
          width: 100%;
          padding: 5px;
        };

        p.data-changed {
          height: 100%;
          border-radius: 0;
          color: fColor(textBlueTag);
        }

        p.to-complete {
          background-color: fColor(dataToCompleteBg);
          border: 1px solid fColor(textBlueTag) !important;
          border-radius: 4px;
        }

        p.to-verify {
          background-color: fColor(dataNotSettedBg);
          border: 1px solid fColor(dataNotSettedBorder);
          border-radius: 4px;
        }

        p.blue-bottom {
          border-bottom: 3px solid fColor(textBlueTag);
          border-radius: 0;
        }

        p.grey-text {
          color: fColor(dataGreyTxt);
        }

        p.blue-txt {
          color: fColor(dataBlueTxt);
        }
      }
    }
  }

  .grey-txt {
    > p , mat-icon {
      color: fColor(dataGreyTxt);
    }
  }
  .yellow-txt {
    > p , mat-icon {
      color: fColor(dataYellowTxt);
    }
  }
  .blue-txt {
    > p , mat-icon {
      color: fColor(dataBlueTxt);
    }
  }

  .pastille {
    background-color: fColor(pastilleDataToCompleteBg);
    border-radius: 12px;
    padding: 2px 8px;
    color: fColor(pastilleDataToCompleteTxt);
  }
}

.top-right-header {
  padding: 16px 16px;
  display: flex;
  justify-content: space-between;
  width: 100%;

  .left-panel {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-self: center;
    width: 60%;
    height: 100%;

    p {
      transition: --percent 1s;
      --temp: var(--percent);
      --v1: max(var(--temp) - 0.5, 0);
      counter-reset: v1 var(--v1);
    }

    p::after {
      content: counter(v1) "%";
    }

    .completion-bar {
      width: 100%;
      position: relative;
    }
  }
  
  .right-panel {
    width: auto;

    h2 {
      font-size: 14px;
      margin: 0;
      padding: 0;
      line-height: normal;
      font-weight: normal;
      color: fColor(cblack);
    }

    p {
      color: fColor(primary);
      border-bottom: 2px solid fColor(primary);
      font-size: 16px;
    }

    .elements {
      display: flex;
      flex-direction: column;
      align-items: center;
      color: fColor(cbluedark);
     
      div:first-child {
        margin-right: 32px;
      }
    }

    .element {
      display: flex;
      align-items: center;
      font-size: 16px;
      position: relative;

      .mat-icon {
        padding: 4px;
        font-size: 17px;
      }
    }

    .element :hover {
      cursor: pointer;
    }
  }
}

.header-list,
.content-list {
  .label {
    width: 300px;

    &.month {
      display: flex;
    }
  }
}

.tooltip {
  position: relative;
  width: 24px;
  height: 24px;
  background-color: fColor(bgHelper);
  border-radius: 100px;

  > i {
    position: absolute;
    right: 50%;
    top: 50%;
    transform: translate(50%, -50%);

    &.blue {
      color: fColor(tooltipIconColor);
    }
  }
}

.item, .header-list, .group-item  {
  display: flex;
  height: 56px;
  align-items: center;
  justify-content: flex-start;
  padding: 0 5px;
  gap: 30px;
}

.header-list {
  background-color: white;
  border-bottom: 2px solid fColor(cblack);

  .activities.is-not-ios {
    margin-right: 16px;
  }

  .column-item {
    display: flex;
    width: 92px;
    justify-content: right;
  }

  .label {
    height: 100%;
    display: flex;
    align-items: center;
    padding: 0 15px;
    min-width: 294px;
  
    p {
      flex: 1;
      text-align: left;
    }
  }
}



.header-list :nth-child(2) {
  width: 92px;
  height: 100%;
}

.header-list div:last-child {
  width: 200px;
  justify-content: flex-end;
  > p {
    text-align: left;
  }
}

.item {
  &.selectable {
    cursor: pointer;

    input {
      cursor: pointer;
    }
  }

  .label {
    display: flex;
    align-items: center;
    padding: 0 15px;
    width: 294px;
    height: 100%;

    p {
      flex: 1;
      margin-left: 8px;
      font-size: 14;
      font-weight: bold;

    }
  }

  .column-item {
    > div {
      display: flex;
      justify-content: right;
      align-items: center;
      height: 100%;
    }
  }
  
  .completion {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 200px;
    padding: 7px 9px ;

    p {
      color: fColor(dataCompletionTextColor);
    }

    p:first-child {
      font-size: 12px;
    }


    p:first-child {
      color: fColor(dataCompletionTextColor);
      transition: --percent 1s;
      --temp: var(--percent);
      --v1: max(var(--temp), 0);
      counter-reset: v1 var(--v1);
    }

    p:first-child::before {
      content: counter(v1)"%";
    }


    p:nth-child(3) {
      font-size: 10px;
      margin: 3px 9px 0 0;
    }
    
    .completion-bar {
      width: 100%;
    }
  }


  input {
    border: none;
    border-radius: 0;
    background-color: transparent;
  }
}


.item-grouped {
  margin-bottom: 1px;
  background-color: white;

  &.maximize {
    .item {
      position: relative;
    }

    .group {
      height: inherit;
      overflow: inherit;
    }
  }

  .group {
    height: 0;
    overflow: hidden;
    display: flex;
    width: 100%;

    > div:last-child {
      flex: 1;
    }

    .grey {
      background-color: fColor(dataGreyBg) !important;
    }
    
    .group-item{
      .column-item:nth-child(2) {
        >div {
          justify-content: left;
        }
      }
    }

    .group-item {
      &:hover {
        cursor: pointer;
      } 

      .label {
        display: flex;
        align-items: center;
        padding: 0 15px;
        width: 294px;
        height: 100%;

        p {
          flex: 1;
          margin-left: 33px;
          font-size: 14px;
        }
      }

      .state-optional {
        background-color: fColor(dataNotSettedIsSetBg);
        padding: 0 6px;
        border-radius: 4px;
        p {
          font-size: 12px !important;
          font-weight: bold;
          color:  fColor(dataGreyTxt);
        }
      }

      .column-item {
        > div {
          display: flex;
          justify-content: right;
          align-items: center;
          height: 100%;
        }
      }

      .completion {
        // display: flex;
        // flex-direction: column;
        // align-items: flex-start;
        // width: 200px;
        // padding: 7px 9px ;
    
        // p {
        //   color: fColor(dataCompletionTextColor)
        // }
    
        // p:first-child {
        //   font-size: 12px;
        // }
    
        // p:nth-child(3) {
        //   font-size: 10px;
        //   margin: 3px 9px 0 0;
        // }
        
        // .completion-bar {
        //   width: 100%;
        // }
      }

      .complete-btn {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        font-size: 14px;
      } 
    }
  }
}

.sub-title {
  font-size: 12px;

  span {
    padding: 2px 8px;
    border-radius: 12px;
    height: 24px;
    line-height: 24px;
    position: relative;
    top: 1px;
  }
}

.in-the-future-text {
  text-align: center;
  margin: 64px;
}


/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}