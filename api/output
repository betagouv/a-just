
> a-just-api@0.0.1 start
> TZ='Europe/Paris' nodemon --exec babel-node src/index.js

[33m[nodemon] 2.0.22[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,json[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: {
  id: 457,
  iElst: 963074,
  label: 'TPRX VICHY',
  type: 'TPRX',
  parent_id: 5
}
tmp: 00undefined : TJ_CUSSET
TPROX: {
  id: 192,
  iElst: 963020,
  label: 'TPRX MANOSQUE',
  type: 'TPRX',
  parent_id: 8
}
tmp: 00undefined : TJ_DIGNE_LES_BAINS
TPROX: {
  id: 199,
  iElst: 962959,
  label: 'TPRX ANTIBES',
  type: 'TPRX',
  parent_id: 10
}
tmp: 00undefined : TJ_GRASSE
TPROX: {
  id: 200,
  iElst: 962976,
  label: 'TPRX CAGNES SUR MER',
  type: 'TPRX',
  parent_id: 10
}
tmp: 00undefined : TJ_GRASSE
TPROX: {
  id: 201,
  iElst: 962978,
  label: 'TPRX CANNES',
  type: 'TPRX',
  parent_id: 10
}
tmp: 00undefined : TJ_GRASSE
TPROX: {
  id: 205,
  iElst: 963027,
  label: 'TPRX MENTON',
  type: 'TPRX',
  parent_id: 11
}
tmp: 00undefined : TJ_NICE
TPROX: {
  id: 374,
  iElst: 962958,
  label: 'TPRX ANNONAY',
  type: 'TPRX',
  parent_id: 12
}
tmp: 00undefined : TJ_PRIVAS
TPROX: {
  id: 375,
  iElst: 962964,
  label: 'TPRX AUBENAS',
  type: 'TPRX',
  parent_id: 12
}
tmp: 00undefined : TJ_PRIVAS
TPROX: {
  id: 430,
  iElst: 963063,
  label: 'TPRX SEDAN',
  type: 'TPRX',
  parent_id: 13
}
tmp: 00undefined : TJ_CHARLEVILLE_MEZIERES
TPROX: {
  id: 476,
  iElst: 963005,
  label: 'TPRX ST GIRONS',
  type: 'TPRX',
  parent_id: 14
}
tmp: 00undefined : TJ_FOIX
TPROX: {
  id: 255,
  iElst: 962999,
  label: 'TPRX FLERS',
  type: 'TPRX',
  parent_id: 100
}
tmp: 00undefined : TJ_ARGENTAN
TPROX: {
  id: 298,
  iElst: 963016,
  label: 'TPRX LENS',
  type: 'TPRX',
  parent_id: 102
}
tmp: 00undefined : TJ_BETHUNE
TPROX: {
  id: 301,
  iElst: 962977,
  label: 'TPRX CALAIS',
  type: 'TPRX',
  parent_id: 103
}
tmp: 00undefined : TJ_BOULOGNE_SUR_MER
TPROX: {
  id: 302,
  iElst: 963034,
  label: 'TPRX MONTREUIL (62)',
  type: 'TPRX',
  parent_id: 103
}
tmp: 00undefined : TJ_BOULOGNE_SUR_MER
TPROX: {
  id: 454,
  iElst: 963054,
  label: 'TPRX RIOM',
  type: 'TPRX',
  parent_id: 105
}
tmp: 00undefined : TJ_CLERMONT_FERRAND
TPROX: {
  id: 455,
  iElst: 963069,
  label: 'TPRX THIERS',
  type: 'TPRX',
  parent_id: 105
}
tmp: 00undefined : TJ_CLERMONT_FERRAND
TPROX: {
  id: 412,
  iElst: 963040,
  label: 'TPRX OLORON STE MARIE',
  type: 'TPRX',
  parent_id: 107
}
tmp: 00undefined : TJ_PAU
TPROX: {
  id: 355,
  iElst: 963028,
  label: 'TPRX MILLAU',
  type: 'TPRX',
  parent_id: 18
}
tmp: 00undefined : TJ_RODEZ
TPROX: {
  id: 189,
  iElst: 963023,
  label: 'TPRX MARTIGUES',
  type: 'TPRX',
  parent_id: 19
}
tmp: 00undefined : TJ_AIX_EN_PROVENCE
TPROX: {
  id: 190,
  iElst: 963058,
  label: 'TPRX SALON DE PROVENCE',
  type: 'TPRX',
  parent_id: 19
}
tmp: 00undefined : TJ_AIX_EN_PROVENCE
TPROX: {
  id: 203,
  iElst: 962963,
  label: 'TPRX AUBAGNE',
  type: 'TPRX',
  parent_id: 20
}
tmp: 00undefined : TJ_MARSEILLE
TPROX: {
  id: 257,
  iElst: 963078,
  label: 'TPRX VIRE NORMANDIE',
  type: 'TPRX',
  parent_id: 22
}
tmp: 00undefined : TJ_CAEN
TPROX: {
  id: 451,
  iElst: 963000,
  label: 'TPRX ST FLOUR',
  type: 'TPRX',
  parent_id: 24
}
tmp: 00undefined : TJ_AURILLAC
TPROX: {
  id: 416,
  iElst: 963055,
  label: 'TPRX ROCHEFORT',
  type: 'TPRX',
  parent_id: 26
}
tmp: 00undefined : TJ_LA_ROCHELLE
TPROX: {
  id: 426,
  iElst: 963013,
  label: 'TPRX JONZAC',
  type: 'TPRX',
  parent_id: 27
}
tmp: 00undefined : TJ_SAINTES
TPROX: {
  id: 249,
  iElst: 962955,
  label: 'TPRX ST AMAND MONTROND',
  type: 'TPRX',
  parent_id: 28
}
tmp: 00undefined : TJ_BOURGES
TPROX: {
  id: 290,
  iElst: 962969,
  label: 'TPRX BEAUNE',
  type: 'TPRX',
  parent_id: 32
}
tmp: 00undefined : TJ_DIJON
TPROX: {
  id: 291,
  iElst: 963030,
  label: 'TPRX MONTBARD',
  type: 'TPRX',
  parent_id: 32
}
tmp: 00undefined : TJ_DIJON
TPROX: {
  id: 231,
  iElst: 963049,
  label: 'TPRX PONTARLIER',
  type: 'TPRX',
  parent_id: 37
}
tmp: 00undefined : TJ_BESANCON
TPROX: {
  id: 465,
  iElst: 962972,
  label: 'TPRX BERNAY',
  type: 'TPRX',
  parent_id: 40
}
tmp: 00undefined : TJ_EVREUX
TPROX: {
  id: 466,
  iElst: 965406,
  label: 'TPRX LOUVIERS',
  type: 'TPRX',
  parent_id: 40
}
tmp: 00undefined : TJ_EVREUX
TPROX: {
  id: 483,
  iElst: 962995,
  label: 'TPRX DREUX',
  type: 'TPRX',
  parent_id: 41
}
tmp: 00undefined : TJ_CHARTRES
TPROX: {
  id: 371,
  iElst: 963072,
  label: 'TPRX UZES',
  type: 'TPRX',
  parent_id: 45
}
tmp: 00undefined : TJ_NIMES
TPROX: {
  id: 480,
  iElst: 963037,
  label: 'TPRX MURET',
  type: 'TPRX',
  parent_id: 46
}
tmp: 00undefined : TJ_TOULOUSE
TPROX: {
  id: 184,
  iElst: 962987,
  label: 'TPRX CONDOM',
  type: 'TPRX',
  parent_id: 47
}
tmp: 00undefined : TJ_AUCH
TPROX: {
  id: 245,
  iElst: 962961,
  label: 'TPRX ARCACHON',
  type: 'TPRX',
  parent_id: 48
}
tmp: 00undefined : TJ_BORDEAUX
TPROX: {
  id: 350,
  iElst: 963065,
  label: 'TPRX SETE',
  type: 'TPRX',
  parent_id: 51
}
tmp: 00undefined : TJ_MONTPELLIER
TPROX: {
  id: 234,
  iElst: 962984,
  label: 'TPRX ST CLAUDE',
  type: 'TPRX',
  parent_id: 59
}
tmp: 00undefined : TJ_LONS_LE_SAUNIER
TPROX: {
  id: 235,
  iElst: 962994,
  label: 'TPRX DOLE',
  type: 'TPRX',
  parent_id: 59
}
tmp: 00undefined : TJ_LONS_LE_SAUNIER
TPROX: {
  id: 186,
  iElst: 962997,
  label: 'TPRX FIGEAC',
  type: 'TPRX',
  parent_id: 70
}
tmp: 00undefined : TJ_CAHORS
TPROX: {
  id: 181,
  iElst: 963022,
  label: 'TPRX MARMANDE',
  type: 'TPRX',
  parent_id: 71
}
tmp: 00undefined : TJ_AGEN
TPROX: {
  id: 182,
  iElst: 963076,
  label: 'TPRX VILLENEUVE SUR LOT',
  type: 'TPRX',
  parent_id: 71
}
tmp: 00undefined : TJ_AGEN
TPROX: {
  id: 220,
  iElst: 962982,
  label: 'TPRX CHOLET',
  type: 'TPRX',
  parent_id: 73
}
tmp: 00undefined : TJ_ANGERS
TPROX: {
  id: 261,
  iElst: 962968,
  label: 'TPRX AVRANCHES',
  type: 'TPRX',
  parent_id: 75
}
tmp: 00undefined : TJ_COUTANCES
TPROX: {
  id: 288,
  iElst: 962993,
  label: 'TPRX ST DIZIER',
  type: 'TPRX',
  parent_id: 78
}
tmp: 00undefined : TJ_CHAUMONT
TPROX: {
  id: 342,
  iElst: 963061,
  label: 'TPRX SARREBOURG',
  type: 'TPRX',
  parent_id: 86
}
tmp: 00undefined : TJ_METZ
TPROX: {
  id: 344,
  iElst: 962967,
  label: 'TPRX ST AVOLD',
  type: 'TPRX',
  parent_id: 87
}
tmp: 00undefined : TJ_SARREGUEMINES
TPROX: {
  id: 252,
  iElst: 962983,
  label: 'TPRX CLAMECY',
  type: 'TPRX',
  parent_id: 89
}
tmp: 00undefined : TJ_NEVERS
TPROX: {
  id: 295,
  iElst: 963025,
  label: 'TPRX MAUBEUGE',
  type: 'TPRX',
  parent_id: 90
}
tmp: 00undefined : TJ_AVESNES_SUR_HELPE
TPROX: {
  id: 307,
  iElst: 963010,
  label: 'TPRX HAZEBROUCK',
  type: 'TPRX',
  parent_id: 93
}
tmp: 00undefined : TJ_DUNKERQUE
TPROX: {
  id: 312,
  iElst: 963057,
  label: 'TPRX ROUBAIX',
  type: 'TPRX',
  parent_id: 94
}
tmp: 00undefined : TJ_LILLE
TPROX: {
  id: 313,
  iElst: 963070,
  label: 'TPRX TOURCOING',
  type: 'TPRX',
  parent_id: 94
}
tmp: 00undefined : TJ_LILLE
TPROX: {
  id: 361,
  iElst: 963018,
  label: 'TPRX LUNEVILLE',
  type: 'TPRX',
  parent_id: 81
}
tmp: 00undefined : TJ_NANCY
TPROX: {
  id: 241,
  iElst: 962985,
  label: 'TPRX COGNAC',
  type: 'TPRX',
  parent_id: 25
}
tmp: 00undefined : TJ_ANGOULEME
TPROX: {
  id: 322,
  iElst: 963032,
  label: 'TPRX MONTELIMAR',
  type: 'TPRX',
  parent_id: 39
}
tmp: 00undefined : TJ_VALENCE
TPROX: {
  id: 323,
  iElst: 963056,
  label: 'TPRX ROMANS SUR ISERE',
  type: 'TPRX',
  parent_id: 39
}
tmp: 00undefined : TJ_VALENCE
TPROX: {
  id: 331,
  iElst: 962970,
  label: 'TPRX BELLEY',
  type: 'TPRX',
  parent_id: 1
}
tmp: 00undefined : TJ_BOURG_EN_BRESSE
TPROX: {
  id: 332,
  iElst: 963038,
  label: 'TPRX NANTUA',
  type: 'TPRX',
  parent_id: 1
}
tmp: 00undefined : TJ_BOURG_EN_BRESSE
TPROX: {
  id: 333,
  iElst: 963071,
  label: 'TPRX TREVOUX',
  type: 'TPRX',
  parent_id: 1
}
tmp: 00undefined : TJ_BOURG_EN_BRESSE
TPROX: {
  id: 243,
  iElst: 963060,
  label: 'TPRX SARLAT LA CANEDA',
  type: 'TPRX',
  parent_id: 35
}
tmp: 00undefined : TJ_BERGERAC
TPROX: {
  id: 444,
  iElst: 963008,
  label: 'TPRX GUINGAMP',
  type: 'TPRX',
  parent_id: 33
}
tmp: 00undefined : TJ_ST_BRIEUC
TPROX: {
  id: 447,
  iElst: 962992,
  label: 'TPRX DINAN',
  type: 'TPRX',
  parent_id: 53
}
tmp: 00undefined : TJ_ST_MALO
TPROX: {
  id: 278,
  iElst: 963029,
  label: 'TPRX MOLSHEIM',
  type: 'TPRX',
  parent_id: 110
}
tmp: 00undefined : TJ_SAVERNE
TPROX: {
  id: 282,
  iElst: 963009,
  label: 'TPRX HAGUENAU',
  type: 'TPRX',
  parent_id: 111
}
tmp: 00undefined : TJ_STRASBOURG
TPROX: {
  id: 283,
  iElst: 963011,
  label: 'TPRX ILLKIRCH GRAFFENSTADEN',
  type: 'TPRX',
  parent_id: 111
}
tmp: 00undefined : TJ_STRASBOURG
TPROX: {
  id: 284,
  iElst: 963062,
  label: 'TPRX SCHILTIGHEIM',
  type: 'TPRX',
  parent_id: 111
}
tmp: 00undefined : TJ_STRASBOURG
TPROX: {
  id: 273,
  iElst: 963007,
  label: 'TPRX GUEBWILLER',
  type: 'TPRX',
  parent_id: 112
}
tmp: 00undefined : TJ_COLMAR
TPROX: {
  id: 274,
  iElst: 963064,
  label: 'TPRX SELESTAT',
  type: 'TPRX',
  parent_id: 112
}
tmp: 00undefined : TJ_COLMAR
TPROX: {
  id: 276,
  iElst: 963068,
  label: 'TPRX THANN',
  type: 'TPRX',
  parent_id: 113
}
tmp: 00undefined : TJ_MULHOUSE
TPROX: {
  id: 239,
  iElst: 963019,
  label: 'TPRX LURE',
  type: 'TPRX',
  parent_id: 116
}
tmp: 00undefined : TJ_VESOUL
TPROX: {
  id: 286,
  iElst: 962989,
  label: 'TPRX LE CREUSOT',
  type: 'TPRX',
  parent_id: 117
}
tmp: 00undefined : TJ_CHALON_SUR_SAONE
TPROX: {
  id: 223,
  iElst: 962998,
  label: 'TPRX LA FLECHE',
  type: 'TPRX',
  parent_id: 119
}
tmp: 00undefined : TJ_LE_MANS
TPROX: {
  id: 271,
  iElst: 962957,
  label: 'TPRX ANNEMASSE',
  type: 'TPRX',
  parent_id: 124
}
tmp: 00undefined : TJ_THONON_LES_BAINS
TPROX: {
  id: 405,
  iElst: 963015,
  label: 'TPRX LAGNY SUR MARNE',
  type: 'TPRX',
  parent_id: 129
}
tmp: 00undefined : TJ_MEAUX
TPROX: {
  id: 504,
  iElst: 963004,
  label: 'TPRX SAINT-GERMAIN-EN-LAYE',
  type: 'TPRX',
  parent_id: 131
}
tmp: 00undefined : TJ_VERSAILLES
TPROX: {
  id: 505,
  iElst: 963021,
  label: 'TPRX MANTES LA JOLIE',
  type: 'TPRX',
  parent_id: 131
}
tmp: 00undefined : TJ_VERSAILLES
TPROX: {
  id: 506,
  iElst: 963048,
  label: 'TPRX POISSY',
  type: 'TPRX',
  parent_id: 131
}
tmp: 00undefined : TJ_VERSAILLES
TPROX: {
  id: 507,
  iElst: 963052,
  label: 'TPRX RAMBOUILLET',
  type: 'TPRX',
  parent_id: 131
}
tmp: 00undefined : TJ_VERSAILLES
TPROX: {
  id: 421,
  iElst: 962974,
  label: 'TPRX BRESSUIRE',
  type: 'TPRX',
  parent_id: 132
}
tmp: 00undefined : TJ_NIORT
TPROX: {
  id: 211,
  iElst: 962954,
  label: 'TPRX ABBEVILLE',
  type: 'TPRX',
  parent_id: 133
}
tmp: 00undefined : TJ_AMIENS
TPROX: {
  id: 212,
  iElst: 963046,
  label: 'TPRX PERONNE',
  type: 'TPRX',
  parent_id: 133
}
tmp: 00undefined : TJ_AMIENS
TPROX: {
  id: 478,
  iElst: 962979,
  label: 'TPRX CASTELSARRASIN',
  type: 'TPRX',
  parent_id: 136
}
tmp: 00undefined : TJ_MONTAUBAN
TPROX: {
  id: 195,
  iElst: 962975,
  label: 'TPRX BRIGNOLES',
  type: 'TPRX',
  parent_id: 137
}
tmp: 00undefined : TJ_DRAGUIGNAN
TPROX: {
  id: 196,
  iElst: 963003,
  label: 'TPRX FREJUS',
  type: 'TPRX',
  parent_id: 137
}
tmp: 00undefined : TJ_DRAGUIGNAN
TPROX: {
  id: 366,
  iElst: 963047,
  label: 'TPRX PERTUIS',
  type: 'TPRX',
  parent_id: 139
}
tmp: 00undefined : TJ_AVIGNON
TPROX: {
  id: 368,
  iElst: 963041,
  label: 'TPRX ORANGE',
  type: 'TPRX',
  parent_id: 140
}
tmp: 00undefined : TJ_CARPENTRAS
TPROX: {
  id: 418,
  iElst: 963001,
  label: 'TPRX FONTENAY LE COMTE',
  type: 'TPRX',
  parent_id: 141
}
tmp: 00undefined : TJ_LA_ROCHE_SUR_YON
TPROX: {
  id: 423,
  iElst: 962981,
  label: 'TPRX CHATELLERAULT',
  type: 'TPRX',
  parent_id: 143
}
tmp: 00undefined : TJ_POITIERS
TPROX: {
  id: 359,
  iElst: 962991,
  label: 'TPRX ST DIE DES VOSGES',
  type: 'TPRX',
  parent_id: 145
}
tmp: 00undefined : TJ_EPINAL
TPROX: {
  id: 382,
  iElst: 962965,
  label: 'TPRX AUBERVILLIERS',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 383,
  iElst: 962966,
  label: 'TPRX AULNAY SOUS BOIS',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 384,
  iElst: 962990,
  label: 'TPRX ST DENIS',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 385,
  iElst: 963035,
  label: 'TPRX MONTREUIL (93)',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 386,
  iElst: 963042,
  label: 'TPRX ST OUEN',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 387,
  iElst: 963044,
  label: 'TPRX PANTIN',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 388,
  iElst: 963051,
  label: 'TPRX LE RAINCY',
  type: 'TPRX',
  parent_id: 151
}
tmp: 00undefined : TJ_BOBIGNY
TPROX: {
  id: 391,
  iElst: 962980,
  label: 'TPRX CHARENTON LE PONT',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 392,
  iElst: 963012,
  label: 'TPRX IVRY SUR SEINE',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 393,
  iElst: 963026,
  label: 'TPRX ST MAUR DES FOSSES',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 394,
  iElst: 963039,
  label: 'TPRX NOGENT SUR MARNE',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 395,
  iElst: 963067,
  label: 'TPRX SUCY EN BRIE',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 396,
  iElst: 963075,
  label: 'TPRX VILLEJUIF',
  type: 'TPRX',
  parent_id: 152
}
tmp: 00undefined : TJ_CRETEIL
TPROX: {
  id: 496,
  iElst: 963006,
  label: 'TPRX GONESSE',
  type: 'TPRX',
  parent_id: 153
}
tmp: 00undefined : TJ_PONTOISE
TPROX: {
  id: 497,
  iElst: 963033,
  label: 'TPRX MONTMORENCY',
  type: 'TPRX',
  parent_id: 153
}
tmp: 00undefined : TJ_PONTOISE
TPROX: {
  id: 498,
  iElst: 963059,
  label: 'TPRX SANNOIS',
  type: 'TPRX',
  parent_id: 153
}
tmp: 00undefined : TJ_PONTOISE
TPROX: {
  id: 225,
  iElst: 963024,
  label: 'TPRX ST MARTIN',
  type: 'TPRX',
  parent_id: 154
}
tmp: 00undefined : TJ_BASSE_TERRE
TPROX: {
  id: 264,
  iElst: 963066,
  label: 'TPRX ST LAURENT DU MARONI',
  type: 'TPRX',
  parent_id: 157
}
tmp: 00undefined : TJ_CAYENNE
TPROX: {
  id: 470,
  iElst: 962971,
  label: 'TPRX ST BENOIT',
  type: 'TPRX',
  parent_id: 158
}
tmp: 00undefined : TJ_ST_DENIS
TPROX: {
  id: 471,
  iElst: 963045,
  label: 'TPRX ST PAUL',
  type: 'TPRX',
  parent_id: 158
}
tmp: 00undefined : TJ_ST_DENIS
TPROX: {
  id: 486,
  iElst: 962960,
  label: 'TPRX ANTONY',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 487,
  iElst: 962962,
  label: 'TPRX ASNIERES SUR SEINE',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 488,
  iElst: 962973,
  label: 'TPRX BOULOGNE BILLANCOURT',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 489,
  iElst: 962986,
  label: 'TPRX COLOMBES',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 490,
  iElst: 962988,
  label: 'TPRX COURBEVOIE',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 491,
  iElst: 963050,
  label: 'TPRX PUTEAUX',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 492,
  iElst: 963073,
  label: 'TPRX VANVES',
  type: 'TPRX',
  parent_id: 150
}
tmp: 00undefined : TJ_NANTERRE
TPROX: {
  id: 335,
  iElst: 963077,
  label: 'TPRX VILLEURBANNE',
  type: 'TPRX',
  parent_id: 114
}
tmp: 00undefined : TJ_LYON
TPROX: {
  id: 435,
  iElst: 963036,
  label: 'TPRX MORLAIX',
  type: 'TPRX',
  parent_id: 42
}
tmp: 00undefined : TJ_BREST
TPROX: {
  id: 339,
  iElst: 963031,
  label: 'TPRX MONTBRISON',
  type: 'TPRX',
  parent_id: 64
}
tmp: 00undefined : TJ_ST_ETIENNE
TPROX: {
  id: 440,
  iElst: 963002,
  label: 'TPRX FOUGERES',
  type: 'TPRX',
  parent_id: 52
}
tmp: 00undefined : TJ_RENNES
TPROX: {
  id: 441,
  iElst: 963053,
  label: 'TPRX REDON',
  type: 'TPRX',
  parent_id: 52
}
tmp: 00undefined : TJ_RENNES
TPROX: {
  id: 399,
  iElst: 962996,
  label: 'TPRX ETAMPES',
  type: 'TPRX',
  parent_id: 149
}
tmp: 00undefined : TJ_ÉVRY-COURCOURONNES
TPROX: {
  id: 400,
  iElst: 963014,
  label: 'TPRX JUVISY SUR ORGE',
  type: 'TPRX',
  parent_id: 149
}
tmp: 00undefined : TJ_ÉVRY-COURCOURONNES
TPROX: {
  id: 401,
  iElst: 963017,
  label: 'TPRX LONGJUMEAU',
  type: 'TPRX',
  parent_id: 149
}
tmp: 00undefined : TJ_ÉVRY-COURCOURONNES
TPROX: {
  id: 402,
  iElst: 963043,
  label: 'TPRX PALAISEAU',
  type: 'TPRX',
  parent_id: 149
}
tmp: 00undefined : TJ_ÉVRY-COURCOURONNES
Res: {
  '0': '0',
  '1': '0',
  '2': '9',
  '3': '6',
  '4': '3',
  '5': '0',
  '6': '4',
  '7': '3',
  '8': ' ',
  '9': ':',
  '10': ' ',
  '11': 'T',
  '12': 'J',
  '13': '_',
  '14': 'É',
  '15': 'V',
  '16': 'R',
  '17': 'Y',
  '18': '-',
  '19': 'C',
  '20': 'O',
  '21': 'U',
  '22': 'R',
  '23': 'C',
  '24': 'O',
  '25': 'U',
  '26': 'R',
  '27': 'O',
  '28': 'N',
  '29': 'N',
  '30': 'E',
  '31': 'S',
  '32': 'E',
  '33': 'S'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 15ms" {}

[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '0': '0',
  '1': '0',
  '2': '9',
  '3': '6',
  '4': '3',
  '5': '0',
  '6': '4',
  '7': '3',
  '8': ' ',
  '9': ':',
  '10': ' ',
  '11': 'T',
  '12': 'J',
  '13': '_',
  '14': 'É',
  '15': 'V',
  '16': 'R',
  '17': 'Y',
  '18': '-',
  '19': 'C',
  '20': 'O',
  '21': 'U',
  '22': 'R',
  '23': 'C',
  '24': 'O',
  '25': 'U',
  '26': 'R',
  '27': 'O',
  '28': 'N',
  '29': 'N',
  '30': 'E',
  '31': 'S',
  '32': 'E',
  '33': 'S'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 16ms" {}

[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00963074': 'TJ_CUSSET',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00963027': 'TJ_NICE',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00963005': 'TJ_FOIX',
  '00962999': 'TJ_ARGENTAN',
  '00963016': 'TJ_BETHUNE',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00963040': 'TJ_PAU',
  '00963028': 'TJ_RODEZ',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00962963': 'TJ_MARSEILLE',
  '00963078': 'TJ_CAEN',
  '00963000': 'TJ_AURILLAC',
  '00963055': 'TJ_LA_ROCHELLE',
  '00963013': 'TJ_SAINTES',
  '00962955': 'TJ_BOURGES',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00963049': 'TJ_BESANCON',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00962995': 'TJ_CHARTRES',
  '00963072': 'TJ_NIMES',
  '00963037': 'TJ_TOULOUSE',
  '00962987': 'TJ_AUCH',
  '00962961': 'TJ_BORDEAUX',
  '00963065': 'TJ_MONTPELLIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00962997': 'TJ_CAHORS',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00962982': 'TJ_ANGERS',
  '00962968': 'TJ_COUTANCES',
  '00962993': 'TJ_CHAUMONT',
  '00963061': 'TJ_METZ',
  '00962967': 'TJ_SARREGUEMINES',
  '00962983': 'TJ_NEVERS',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00963010': 'TJ_DUNKERQUE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00963018': 'TJ_NANCY',
  '00962985': 'TJ_ANGOULEME',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00963060': 'TJ_BERGERAC',
  '00963008': 'TJ_ST_BRIEUC',
  '00962992': 'TJ_ST_MALO',
  '00963029': 'TJ_SAVERNE',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00963068': 'TJ_MULHOUSE',
  '00963019': 'TJ_VESOUL',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00962998': 'TJ_LE_MANS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00963015': 'TJ_MEAUX',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00962974': 'TJ_NIORT',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00962979': 'TJ_MONTAUBAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00963047': 'TJ_AVIGNON',
  '00963041': 'TJ_CARPENTRAS',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00962981': 'TJ_POITIERS',
  '00962991': 'TJ_EPINAL',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00963024': 'TJ_BASSE_TERRE',
  '00963066': 'TJ_CAYENNE',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00963077': 'TJ_LYON',
  '00963036': 'TJ_BREST',
  '00963031': 'TJ_ST_ETIENNE',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 16ms" {}

[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
[32minfo[39m: "Voici un log simple" {}

[Mount route] 	get	 /logs/system
[Mount route] 	post	 /api/activities/update-by
[Mount route] 	post	 /api/activities/get-by-month
[Mount route] 	post	 /api/activities/get-last-month
[Mount route] 	get	 /api/auths/auto-login
[Mount route] 	get	 /api/auths/auto-login-admin
[Mount route] 	get	 /api/auths/logout
[Mount route] 	post	 /api/auths/login
[Mount route] 	post	 /api/auths/login-admin
[Mount route] 	post	 /api/calculator/filter-list
[Mount route] 	get	 /api/contentieux-options/get-all-admin
[Mount route] 	get	 /api/contentieux-options/get-backup-details/:backupId
[Mount route] 	post	 /api/contentieux-options/get-all
[Mount route] 	post	 /api/contentieux-options/duplicate-backup
[Mount route] 	post	 /api/contentieux-options/save-backup
[Mount route] 	post	 /api/contentieux-options/rename-backup
[Mount route] 	post	 /api/contentieux-options/update-backup
[Mount route] 	post	 /api/contentieux-options/get-last-update
[Mount route] 	delete	 /api/contentieux-options/remove-backup/:backupId
[Mount route] 	post	 /api/extractor/filter-list
[Mount route] 	post	 /api/extractor/filter-list-act
[Mount route] 	get	 /api/hr-categories/get-all
[Mount route] 	post	 /api/hr-comment/get-hr-comment
[Mount route] 	post	 /api/hr-comment/update-hr-comment
[Mount route] 	get	 /api/hr-fonctions/get-all
[Mount route] 	get	 /api/human-resources/get-backup-list
[Mount route] 	get	 /api/human-resources/read-hr/:hrId
[Mount route] 	post	 /api/human-resources/get-current-hr
[Mount route] 	post	 /api/human-resources/duplicate-backup
[Mount route] 	post	 /api/human-resources/update-hr
[Mount route] 	post	 /api/human-resources/filter-list
[Mount route] 	delete	 /api/human-resources/remove-backup/:backupId
[Mount route] 	delete	 /api/human-resources/remove-hr/:hrId
[Mount route] 	delete	 /api/human-resources/remove-hr-test/:hrId
[Mount route] 	delete	 /api/human-resources/remove-situation/:situationId
[Mount route] 	delete	 /api/human-resources/remove-situation-test/:situationId
[Mount route] 	post	 /api/imports/import-hr
[Mount route] 	post	 /api/imports/import-referentiel
[Mount route] 	post	 /api/imports/import-activities
[Mount route] 	post	 /api/imports/import-all-activities
[Mount route] 	get	 /api
[Mount route] 	get	 /api/news/last
[Mount route] 	get	 /api/news/get-all
[Mount route] 	post	 /api/news/on-close
[Mount route] 	post	 /api/news/update-create
[Mount route] 	post	 /api/news/remove
[Mount route] 	get	 /api/public/*
[Mount route] 	post	 /api/reaffectator/filter-list
[Mount route] 	post	 /api/simulator/get-situation
[Mount route] 	post	 /api/simulator/to-simulate
[Mount route] 	get	 /api/juridictions/get-all-visibles
[Mount route] 	get	 /api/juridictions/get-all
[Mount route] 	get	 /api/juridictions/get-all-ielst
[Mount route] 	put	 /api/juridictions/update-juridiction
[Mount route] 	get	 /api/users/me
[Mount route] 	get	 /api/users/get-all
[Mount route] 	get	 /api/users/get-user-datas
[Mount route] 	post	 /api/users/create-account
[Mount route] 	post	 /api/users/update-account
[Mount route] 	post	 /api/users/forgot-password
[Mount route] 	post	 /api/users/change-password
[Mount route] 	delete	 /api/users/remove-account-test/:id
[Mount route] 	delete	 /api/users/remove-account/:id
[Mount route] 	get	 /admin/*
[Mount route] 	get	 /*
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
Executing (default): SELECT 1+1 AS result {
  plain: true,
  raw: true,
  logging: [Function: log] { prototype: {} },
  type: 'SELECT'
}
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'migrations' {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWTABLES'
}
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'migrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname; {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  timestamps: false,
  validate: {},
  freezeTableName: false,
  underscored: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: null,
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: {},
  indexes: [],
  whereMergeStrategy: 'overwrite',
  name: { plural: 'SequelizeMeta', singular: 'SequelizeMetum' },
  omitNull: false,
  tableName: 'migrations',
  charset: 'utf8',
  collate: 'utf8_unicode_ci',
  sequelize: <ref *1> Sequelize {
    options: {
      dialect: 'postgres',
      dialectModule: null,
      dialectModulePath: null,
      host: '127.0.0.1',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      timezone: '+00:00',
      standardConformingStrings: true,
      logging: [Function],
      omitNull: false,
      native: false,
      replication: false,
      ssl: undefined,
      pool: {},
      quoteIdentifiers: true,
      hooks: {},
      retry: [Object],
      transactionType: 'DEFERRED',
      isolationLevel: null,
      databaseVersion: '10.4.0',
      typeValidation: false,
      benchmark: false,
      minifyAliases: false,
      logQueryParameters: false,
      attributeBehavior: 'throw',
      url: 'postgres://ajust-user:ajust-pass@127.0.0.1:5436/ajust',
      port: '5436',
      dialectOptions: [Object: null prototype]
    },
    config: {
      database: 'ajust',
      username: 'ajust-user',
      password: 'ajust-pass',
      host: '127.0.0.1',
      port: '5436',
      pool: {},
      protocol: 'tcp',
      native: false,
      ssl: undefined,
      replication: false,
      dialectModule: null,
      dialectModulePath: null,
      keepDefaultTimezone: undefined,
      dialectOptions: [Object: null prototype]
    },
    dialect: PostgresDialect {
      sequelize: [Circular *1],
      connectionManager: [ConnectionManager],
      queryGenerator: [PostgresQueryGenerator],
      queryInterface: [PostgresQueryInterface]
    },
    queryInterface: PostgresQueryInterface {
      sequelize: [Circular *1],
      queryGenerator: [PostgresQueryGenerator],
      bulkInsertAutoIncrement: [Function (anonymous)],
      findAll: [Function (anonymous)],
      findOne: [Function (anonymous)],
      lastId: [Function (anonymous)],
      nextId: [Function (anonymous)]
    },
    models: {
      SequelizeMeta: SequelizeMeta,
      Activities: Activities,
      ContentieuxOptions: ContentieuxOptions,
      HRActivities: HRActivities,
      HRBackups: HRBackups,
      HRCategories: HRCategories,
      HRComments: HRComments,
      HRFonctions: HRFonctions,
      HRIndisponibilities: HRIndisponibilities,
      HRSituations: HRSituations,
      HistoriesActivitiesUpdate: HistoriesActivitiesUpdate,
      HistoriesContentieuxUpdate: HistoriesContentieuxUpdate,
      Logs: Logs,
      News: News,
      NewsUserLog: NewsUserLog,
      OptionsBackupJuridictions: OptionsBackupJuridictions,
      OptionsBackups: OptionsBackups,
      TJ: TJ,
      UserVentilations: UserVentilations,
      UsersAccess: UsersAccess,
      CompetenceMappings: CompetenceMappings,
      ContentieuxReferentiels: ContentieuxReferentiels,
      HRVentilations: HRVentilations,
      HumanResources: HumanResources,
      tokens: tokens,
      Users: Users
    },
    modelManager: ModelManager { models: [Array], sequelize: [Circular *1] },
    connectionManager: ConnectionManager {
      sequelize: [Circular *1],
      config: [Object],
      dialect: [PostgresDialect],
      versionPromise: null,
      dialectName: 'postgres',
      pool: [Pool],
      lib: [PG],
      nameOidMap: [Object],
      enumOids: [Object],
      oidParserMap: [Map]
    }
  },
  hooks: true,
  type: 'SHOWINDEXES'
}
Executing (default): SELECT "name" FROM "migrations" AS "SequelizeMeta" ORDER BY "SequelizeMeta"."name" ASC; {
  plain: false,
  raw: false,
  logging: [Function: log] { prototype: {} },
  order: [ [ 'name', [Literal] ] ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'name' ],
  attributes: [ 'name' ],
  tableNames: [ 'migrations' ],
  type: 'SELECT',
  model: SequelizeMeta
}
--- IS READY ---
Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 15ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 26ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 17ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 25ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 23ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 24ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 9ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 26ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 21ms" {}

Executing (default): SELECT "id", "i_elst" AS "iElst", "label", "type", "parent_id" FROM "TJ" AS "TJ" WHERE ("TJ"."deleted_at" IS NULL); {
  plain: false,
  raw: true,
  logging: [Function: log] { prototype: {} },
  attributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  hooks: true,
  rejectOnEmpty: false,
  originalAttributes: [ 'id', [ 'i_elst', 'iElst' ], 'label', 'type', 'parent_id' ],
  where: '("TJ"."deleted_at" IS NULL)',
  tableNames: [ 'TJ' ],
  type: 'SELECT',
  model: TJ
}
TPROX: 963074
tmp: 00963074 : TJ_CUSSET
TPROX: 963020
tmp: 00963020 : TJ_DIGNE_LES_BAINS
TPROX: 962959
tmp: 00962959 : TJ_GRASSE
TPROX: 962976
tmp: 00962976 : TJ_GRASSE
TPROX: 962978
tmp: 00962978 : TJ_GRASSE
TPROX: 963027
tmp: 00963027 : TJ_NICE
TPROX: 962958
tmp: 00962958 : TJ_PRIVAS
TPROX: 962964
tmp: 00962964 : TJ_PRIVAS
TPROX: 963063
tmp: 00963063 : TJ_CHARLEVILLE_MEZIERES
TPROX: 963005
tmp: 00963005 : TJ_FOIX
TPROX: 962999
tmp: 00962999 : TJ_ARGENTAN
TPROX: 963016
tmp: 00963016 : TJ_BETHUNE
TPROX: 962977
tmp: 00962977 : TJ_BOULOGNE_SUR_MER
TPROX: 963034
tmp: 00963034 : TJ_BOULOGNE_SUR_MER
TPROX: 963054
tmp: 00963054 : TJ_CLERMONT_FERRAND
TPROX: 963069
tmp: 00963069 : TJ_CLERMONT_FERRAND
TPROX: 963040
tmp: 00963040 : TJ_PAU
TPROX: 963028
tmp: 00963028 : TJ_RODEZ
TPROX: 963023
tmp: 00963023 : TJ_AIX_EN_PROVENCE
TPROX: 963058
tmp: 00963058 : TJ_AIX_EN_PROVENCE
TPROX: 962963
tmp: 00962963 : TJ_MARSEILLE
TPROX: 963078
tmp: 00963078 : TJ_CAEN
TPROX: 963000
tmp: 00963000 : TJ_AURILLAC
TPROX: 963055
tmp: 00963055 : TJ_LA_ROCHELLE
TPROX: 963013
tmp: 00963013 : TJ_SAINTES
TPROX: 962955
tmp: 00962955 : TJ_BOURGES
TPROX: 962969
tmp: 00962969 : TJ_DIJON
TPROX: 963030
tmp: 00963030 : TJ_DIJON
TPROX: 963049
tmp: 00963049 : TJ_BESANCON
TPROX: 962972
tmp: 00962972 : TJ_EVREUX
TPROX: 965406
tmp: 00965406 : TJ_EVREUX
TPROX: 962995
tmp: 00962995 : TJ_CHARTRES
TPROX: 963072
tmp: 00963072 : TJ_NIMES
TPROX: 963037
tmp: 00963037 : TJ_TOULOUSE
TPROX: 962987
tmp: 00962987 : TJ_AUCH
TPROX: 962961
tmp: 00962961 : TJ_BORDEAUX
TPROX: 963065
tmp: 00963065 : TJ_MONTPELLIER
TPROX: 962984
tmp: 00962984 : TJ_LONS_LE_SAUNIER
TPROX: 962994
tmp: 00962994 : TJ_LONS_LE_SAUNIER
TPROX: 962997
tmp: 00962997 : TJ_CAHORS
TPROX: 963022
tmp: 00963022 : TJ_AGEN
TPROX: 963076
tmp: 00963076 : TJ_AGEN
TPROX: 962982
tmp: 00962982 : TJ_ANGERS
TPROX: 962968
tmp: 00962968 : TJ_COUTANCES
TPROX: 962993
tmp: 00962993 : TJ_CHAUMONT
TPROX: 963061
tmp: 00963061 : TJ_METZ
TPROX: 962967
tmp: 00962967 : TJ_SARREGUEMINES
TPROX: 962983
tmp: 00962983 : TJ_NEVERS
TPROX: 963025
tmp: 00963025 : TJ_AVESNES_SUR_HELPE
TPROX: 963010
tmp: 00963010 : TJ_DUNKERQUE
TPROX: 963057
tmp: 00963057 : TJ_LILLE
TPROX: 963070
tmp: 00963070 : TJ_LILLE
TPROX: 963018
tmp: 00963018 : TJ_NANCY
TPROX: 962985
tmp: 00962985 : TJ_ANGOULEME
TPROX: 963032
tmp: 00963032 : TJ_VALENCE
TPROX: 963056
tmp: 00963056 : TJ_VALENCE
TPROX: 962970
tmp: 00962970 : TJ_BOURG_EN_BRESSE
TPROX: 963038
tmp: 00963038 : TJ_BOURG_EN_BRESSE
TPROX: 963071
tmp: 00963071 : TJ_BOURG_EN_BRESSE
TPROX: 963060
tmp: 00963060 : TJ_BERGERAC
TPROX: 963008
tmp: 00963008 : TJ_ST_BRIEUC
TPROX: 962992
tmp: 00962992 : TJ_ST_MALO
TPROX: 963029
tmp: 00963029 : TJ_SAVERNE
TPROX: 963009
tmp: 00963009 : TJ_STRASBOURG
TPROX: 963011
tmp: 00963011 : TJ_STRASBOURG
TPROX: 963062
tmp: 00963062 : TJ_STRASBOURG
TPROX: 963007
tmp: 00963007 : TJ_COLMAR
TPROX: 963064
tmp: 00963064 : TJ_COLMAR
TPROX: 963068
tmp: 00963068 : TJ_MULHOUSE
TPROX: 963019
tmp: 00963019 : TJ_VESOUL
TPROX: 962989
tmp: 00962989 : TJ_CHALON_SUR_SAONE
TPROX: 962998
tmp: 00962998 : TJ_LE_MANS
TPROX: 962957
tmp: 00962957 : TJ_THONON_LES_BAINS
TPROX: 963015
tmp: 00963015 : TJ_MEAUX
TPROX: 963004
tmp: 00963004 : TJ_VERSAILLES
TPROX: 963021
tmp: 00963021 : TJ_VERSAILLES
TPROX: 963048
tmp: 00963048 : TJ_VERSAILLES
TPROX: 963052
tmp: 00963052 : TJ_VERSAILLES
TPROX: 962974
tmp: 00962974 : TJ_NIORT
TPROX: 962954
tmp: 00962954 : TJ_AMIENS
TPROX: 963046
tmp: 00963046 : TJ_AMIENS
TPROX: 962979
tmp: 00962979 : TJ_MONTAUBAN
TPROX: 962975
tmp: 00962975 : TJ_DRAGUIGNAN
TPROX: 963003
tmp: 00963003 : TJ_DRAGUIGNAN
TPROX: 963047
tmp: 00963047 : TJ_AVIGNON
TPROX: 963041
tmp: 00963041 : TJ_CARPENTRAS
TPROX: 963001
tmp: 00963001 : TJ_LA_ROCHE_SUR_YON
TPROX: 962981
tmp: 00962981 : TJ_POITIERS
TPROX: 962991
tmp: 00962991 : TJ_EPINAL
TPROX: 962965
tmp: 00962965 : TJ_BOBIGNY
TPROX: 962966
tmp: 00962966 : TJ_BOBIGNY
TPROX: 962990
tmp: 00962990 : TJ_BOBIGNY
TPROX: 963035
tmp: 00963035 : TJ_BOBIGNY
TPROX: 963042
tmp: 00963042 : TJ_BOBIGNY
TPROX: 963044
tmp: 00963044 : TJ_BOBIGNY
TPROX: 963051
tmp: 00963051 : TJ_BOBIGNY
TPROX: 962980
tmp: 00962980 : TJ_CRETEIL
TPROX: 963012
tmp: 00963012 : TJ_CRETEIL
TPROX: 963026
tmp: 00963026 : TJ_CRETEIL
TPROX: 963039
tmp: 00963039 : TJ_CRETEIL
TPROX: 963067
tmp: 00963067 : TJ_CRETEIL
TPROX: 963075
tmp: 00963075 : TJ_CRETEIL
TPROX: 963006
tmp: 00963006 : TJ_PONTOISE
TPROX: 963033
tmp: 00963033 : TJ_PONTOISE
TPROX: 963059
tmp: 00963059 : TJ_PONTOISE
TPROX: 963024
tmp: 00963024 : TJ_BASSE_TERRE
TPROX: 963066
tmp: 00963066 : TJ_CAYENNE
TPROX: 962971
tmp: 00962971 : TJ_ST_DENIS
TPROX: 963045
tmp: 00963045 : TJ_ST_DENIS
TPROX: 962960
tmp: 00962960 : TJ_NANTERRE
TPROX: 962962
tmp: 00962962 : TJ_NANTERRE
TPROX: 962973
tmp: 00962973 : TJ_NANTERRE
TPROX: 962986
tmp: 00962986 : TJ_NANTERRE
TPROX: 962988
tmp: 00962988 : TJ_NANTERRE
TPROX: 963050
tmp: 00963050 : TJ_NANTERRE
TPROX: 963073
tmp: 00963073 : TJ_NANTERRE
TPROX: 963077
tmp: 00963077 : TJ_LYON
TPROX: 963036
tmp: 00963036 : TJ_BREST
TPROX: 963031
tmp: 00963031 : TJ_ST_ETIENNE
TPROX: 963002
tmp: 00963002 : TJ_RENNES
TPROX: 963053
tmp: 00963053 : TJ_RENNES
TPROX: 962996
tmp: 00962996 : TJ_ÉVRY-COURCOURONNES
TPROX: 963014
tmp: 00963014 : TJ_ÉVRY-COURCOURONNES
TPROX: 963017
tmp: 00963017 : TJ_ÉVRY-COURCOURONNES
TPROX: 963043
tmp: 00963043 : TJ_ÉVRY-COURCOURONNES
Res: {
  '00100040': 'TJ_LAON',
  '00100041': 'TJ_ST_QUENTIN',
  '00100042': 'TJ_SOISSONS',
  '00100043': 'TJ_CUSSET',
  '00963074': 'TJ_CUSSET',
  '00100044': 'TJ_MONTLUCON',
  '00100045': 'TJ_MOULINS',
  '00100046': 'TJ_DIGNE_LES_BAINS',
  '00963020': 'TJ_DIGNE_LES_BAINS',
  '00100047': 'TJ_GAP',
  '00100048': 'TJ_GRASSE',
  '00962959': 'TJ_GRASSE',
  '00962976': 'TJ_GRASSE',
  '00962978': 'TJ_GRASSE',
  '00100049': 'TJ_NICE',
  '00963027': 'TJ_NICE',
  '00100050': 'TJ_PRIVAS',
  '00962958': 'TJ_PRIVAS',
  '00962964': 'TJ_PRIVAS',
  '00100051': 'TJ_CHARLEVILLE_MEZIERES',
  '00963063': 'TJ_CHARLEVILLE_MEZIERES',
  '00100052': 'TJ_FOIX',
  '00963005': 'TJ_FOIX',
  '00100053': 'TJ_TROYES',
  '00100149': 'TJ_COMPIEGNE',
  '00100151': 'TJ_ALENCON',
  '00100152': 'TJ_ARGENTAN',
  '00962999': 'TJ_ARGENTAN',
  '00100153': 'TJ_ARRAS',
  '00100154': 'TJ_BETHUNE',
  '00963016': 'TJ_BETHUNE',
  '00100155': 'TJ_BOULOGNE_SUR_MER',
  '00962977': 'TJ_BOULOGNE_SUR_MER',
  '00963034': 'TJ_BOULOGNE_SUR_MER',
  '00100156': 'TJ_ST_OMER',
  '00100157': 'TJ_CLERMONT_FERRAND',
  '00963054': 'TJ_CLERMONT_FERRAND',
  '00963069': 'TJ_CLERMONT_FERRAND',
  '00100159': 'TJ_BAYONNE',
  '00100160': 'TJ_PAU',
  '00963040': 'TJ_PAU',
  '00100161': 'TJ_TARBES',
  '00100054': 'TJ_CARCASSONNE',
  '00100055': 'TJ_NARBONNE',
  '00100057': 'TJ_RODEZ',
  '00963028': 'TJ_RODEZ',
  '00100058': 'TJ_AIX_EN_PROVENCE',
  '00963023': 'TJ_AIX_EN_PROVENCE',
  '00963058': 'TJ_AIX_EN_PROVENCE',
  '00100059': 'TJ_MARSEILLE',
  '00962963': 'TJ_MARSEILLE',
  '00100060': 'TJ_TARASCON',
  '00100061': 'TJ_CAEN',
  '00963078': 'TJ_CAEN',
  '00100062': 'TJ_LISIEUX',
  '00100063': 'TJ_AURILLAC',
  '00963000': 'TJ_AURILLAC',
  '00100066': 'TJ_LA_ROCHELLE',
  '00963055': 'TJ_LA_ROCHELLE',
  '00100067': 'TJ_SAINTES',
  '00963013': 'TJ_SAINTES',
  '00100068': 'TJ_BOURGES',
  '00962955': 'TJ_BOURGES',
  '00100069': 'TJ_BRIVE_LA_GAILLARDE',
  '00100071': 'TJ_AJACCIO',
  '00100072': 'TJ_BASTIA',
  '00100073': 'TJ_DIJON',
  '00962969': 'TJ_DIJON',
  '00963030': 'TJ_DIJON',
  '00100077': 'TJ_GUERET',
  '00100080': 'TJ_BESANCON',
  '00963049': 'TJ_BESANCON',
  '00100081': 'TJ_MONTBELIARD',
  '00100084': 'TJ_EVREUX',
  '00962972': 'TJ_EVREUX',
  '00965406': 'TJ_EVREUX',
  '00100085': 'TJ_CHARTRES',
  '00962995': 'TJ_CHARTRES',
  '00100089': 'TJ_ALES',
  '00100090': 'TJ_NIMES',
  '00963072': 'TJ_NIMES',
  '00100092': 'TJ_TOULOUSE',
  '00963037': 'TJ_TOULOUSE',
  '00100093': 'TJ_AUCH',
  '00962987': 'TJ_AUCH',
  '00100094': 'TJ_BORDEAUX',
  '00962961': 'TJ_BORDEAUX',
  '00100096': 'TJ_BEZIERS',
  '00100097': 'TJ_MONTPELLIER',
  '00963065': 'TJ_MONTPELLIER',
  '00100100': 'TJ_CHATEAUROUX',
  '00100101': 'TJ_TOURS',
  '00100102': 'TJ_BOURGOIN_JALLIEU',
  '00100103': 'TJ_GRENOBLE',
  '00100104': 'TJ_VIENNE',
  '00100106': 'TJ_LONS_LE_SAUNIER',
  '00962984': 'TJ_LONS_LE_SAUNIER',
  '00962994': 'TJ_LONS_LE_SAUNIER',
  '00100107': 'TJ_DAX',
  '00100108': 'TJ_MONT_DE_MARSAN',
  '00100109': 'TJ_BLOIS',
  '00100113': 'TJ_LE_PUY_EN_VELAY',
  '00100116': 'TJ_MONTARGIS',
  '00100117': 'TJ_ORLEANS',
  '00100118': 'TJ_CAHORS',
  '00962997': 'TJ_CAHORS',
  '00100119': 'TJ_AGEN',
  '00963022': 'TJ_AGEN',
  '00963076': 'TJ_AGEN',
  '00100121': 'TJ_MENDE',
  '00100122': 'TJ_ANGERS',
  '00962982': 'TJ_ANGERS',
  '00100125': 'TJ_CHERBOURG-EN-COTENTIN',
  '00100126': 'TJ_COUTANCES',
  '00962968': 'TJ_COUTANCES',
  '00100127': 'TJ_CHALONS_EN_CHAMPAGNE',
  '00100128': 'TJ_REIMS',
  '00100129': 'TJ_CHAUMONT',
  '00962993': 'TJ_CHAUMONT',
  '00100130': 'TJ_LAVAL',
  '00100131': 'TJ_VAL_DE_BRIEY',
  '00100133': 'TJ_BAR_LE_DUC',
  '00100134': 'TJ_VERDUN',
  '00100137': 'TJ_METZ',
  '00963061': 'TJ_METZ',
  '00100138': 'TJ_SARREGUEMINES',
  '00962967': 'TJ_SARREGUEMINES',
  '00100139': 'TJ_THIONVILLE',
  '00100140': 'TJ_NEVERS',
  '00962983': 'TJ_NEVERS',
  '00100141': 'TJ_AVESNES_SUR_HELPE',
  '00963025': 'TJ_AVESNES_SUR_HELPE',
  '00100142': 'TJ_CAMBRAI',
  '00100143': 'TJ_DOUAI',
  '00100144': 'TJ_DUNKERQUE',
  '00963010': 'TJ_DUNKERQUE',
  '00100146': 'TJ_LILLE',
  '00963057': 'TJ_LILLE',
  '00963070': 'TJ_LILLE',
  '00100148': 'TJ_BEAUVAIS',
  '00100132': 'TJ_NANCY',
  '00963018': 'TJ_NANCY',
  '00100064': 'TJ_ANGOULEME',
  '00962985': 'TJ_ANGOULEME',
  '00100082': 'TJ_VALENCE',
  '00963032': 'TJ_VALENCE',
  '00963056': 'TJ_VALENCE',
  '00100039': 'TJ_BOURG_EN_BRESSE',
  '00962970': 'TJ_BOURG_EN_BRESSE',
  '00963038': 'TJ_BOURG_EN_BRESSE',
  '00963071': 'TJ_BOURG_EN_BRESSE',
  '00100111': 'TJ_ROANNE',
  '00100147': 'TJ_VALENCIENNES',
  '00100078': 'TJ_BERGERAC',
  '00963060': 'TJ_BERGERAC',
  '00100079': 'TJ_PERIGUEUX',
  '00100135': 'TJ_LORIENT',
  '00100114': 'TJ_NANTES',
  '00100088': 'TJ_QUIMPER',
  '00100076': 'TJ_ST_BRIEUC',
  '00963008': 'TJ_ST_BRIEUC',
  '00100099': 'TJ_ST_MALO',
  '00962992': 'TJ_ST_MALO',
  '00100115': 'TJ_ST_NAZAIRE',
  '00100136': 'TJ_VANNES',
  '00100162': 'TJ_PERPIGNAN',
  '00100163': 'TJ_SAVERNE',
  '00963029': 'TJ_SAVERNE',
  '00100164': 'TJ_STRASBOURG',
  '00963009': 'TJ_STRASBOURG',
  '00963011': 'TJ_STRASBOURG',
  '00963062': 'TJ_STRASBOURG',
  '00100165': 'TJ_COLMAR',
  '00963007': 'TJ_COLMAR',
  '00963064': 'TJ_COLMAR',
  '00100166': 'TJ_MULHOUSE',
  '00963068': 'TJ_MULHOUSE',
  '00100170': 'TJ_VESOUL',
  '00963019': 'TJ_VESOUL',
  '00100171': 'TJ_CHALON_SUR_SAONE',
  '00962989': 'TJ_CHALON_SUR_SAONE',
  '00100172': 'TJ_MACON',
  '00100173': 'TJ_LE_MANS',
  '00962998': 'TJ_LE_MANS',
  '00100174': 'TJ_ALBERTVILLE',
  '00100175': 'TJ_CHAMBERY',
  '00100176': 'TJ_ANNECY',
  '00100177': 'TJ_BONNEVILLE',
  '00100178': 'TJ_THONON_LES_BAINS',
  '00962957': 'TJ_THONON_LES_BAINS',
  '00100180': 'TJ_DIEPPE',
  '00100181': 'TJ_LE_HAVRE',
  '00100182': 'TJ_ROUEN',
  '00100183': 'TJ_FONTAINEBLEAU',
  '00100184': 'TJ_MEAUX',
  '00963015': 'TJ_MEAUX',
  '00100185': 'TJ_MELUN',
  '00100186': 'TJ_VERSAILLES',
  '00963004': 'TJ_VERSAILLES',
  '00963021': 'TJ_VERSAILLES',
  '00963048': 'TJ_VERSAILLES',
  '00963052': 'TJ_VERSAILLES',
  '00100188': 'TJ_NIORT',
  '00962974': 'TJ_NIORT',
  '00100190': 'TJ_AMIENS',
  '00962954': 'TJ_AMIENS',
  '00963046': 'TJ_AMIENS',
  '00100192': 'TJ_ALBI',
  '00100193': 'TJ_CASTRES',
  '00100194': 'TJ_MONTAUBAN',
  '00962979': 'TJ_MONTAUBAN',
  '00100195': 'TJ_DRAGUIGNAN',
  '00962975': 'TJ_DRAGUIGNAN',
  '00963003': 'TJ_DRAGUIGNAN',
  '00100196': 'TJ_TOULON',
  '00100197': 'TJ_AVIGNON',
  '00963047': 'TJ_AVIGNON',
  '00100198': 'TJ_CARPENTRAS',
  '00963041': 'TJ_CARPENTRAS',
  '00100199': 'TJ_LA_ROCHE_SUR_YON',
  '00963001': 'TJ_LA_ROCHE_SUR_YON',
  '00100200': "TJ_SABLES-D'OLONNE",
  '00100201': 'TJ_POITIERS',
  '00962981': 'TJ_POITIERS',
  '00100202': 'TJ_LIMOGES',
  '00100203': 'TJ_EPINAL',
  '00962991': 'TJ_EPINAL',
  '00100205': 'TJ_AUXERRE',
  '00100206': 'TJ_SENS',
  '00100207': 'TJ_BELFORT',
  '00100210': 'TJ_BOBIGNY',
  '00962965': 'TJ_BOBIGNY',
  '00962966': 'TJ_BOBIGNY',
  '00962990': 'TJ_BOBIGNY',
  '00963035': 'TJ_BOBIGNY',
  '00963042': 'TJ_BOBIGNY',
  '00963044': 'TJ_BOBIGNY',
  '00963051': 'TJ_BOBIGNY',
  '00100211': 'TJ_CRETEIL',
  '00962980': 'TJ_CRETEIL',
  '00963012': 'TJ_CRETEIL',
  '00963026': 'TJ_CRETEIL',
  '00963039': 'TJ_CRETEIL',
  '00963067': 'TJ_CRETEIL',
  '00963075': 'TJ_CRETEIL',
  '00100212': 'TJ_PONTOISE',
  '00963006': 'TJ_PONTOISE',
  '00963033': 'TJ_PONTOISE',
  '00963059': 'TJ_PONTOISE',
  '00100213': 'TJ_BASSE_TERRE',
  '00963024': 'TJ_BASSE_TERRE',
  '00100214': 'TJ_POINTE_A_PITRE',
  '00100215': 'TJ_FORT_DE_FRANCE',
  '00100216': 'TJ_CAYENNE',
  '00963066': 'TJ_CAYENNE',
  '00100217': 'TJ_ST_DENIS',
  '00962971': 'TJ_ST_DENIS',
  '00963045': 'TJ_ST_DENIS',
  '00100218': 'TJ_ST_PIERRE',
  '00100209': 'TJ_NANTERRE',
  '00962960': 'TJ_NANTERRE',
  '00962962': 'TJ_NANTERRE',
  '00962973': 'TJ_NANTERRE',
  '00962986': 'TJ_NANTERRE',
  '00962988': 'TJ_NANTERRE',
  '00963050': 'TJ_NANTERRE',
  '00963073': 'TJ_NANTERRE',
  '00100167': 'TJ_LYON',
  '00963077': 'TJ_LYON',
  '00100086': 'TJ_BREST',
  '00963036': 'TJ_BREST',
  '00100112': 'TJ_ST_ETIENNE',
  '00963031': 'TJ_ST_ETIENNE',
  '00100168': 'TJ_VILLEFRANCHE_SUR_SAONE',
  '00100150': 'TJ_SENLIS',
  '00100095': 'TJ_LIBOURNE',
  '00100098': 'TJ_RENNES',
  '00963002': 'TJ_RENNES',
  '00963053': 'TJ_RENNES',
  '00100208': 'TJ_ÉVRY-COURCOURONNES',
  '00962996': 'TJ_ÉVRY-COURCOURONNES',
  '00963014': 'TJ_ÉVRY-COURCOURONNES',
  '00963017': 'TJ_ÉVRY-COURCOURONNES',
  '00963043': 'TJ_ÉVRY-COURCOURONNES'
}
[32minfo[39m: "GET /api/juridictions/get-all-ielst 200 21ms" {}

