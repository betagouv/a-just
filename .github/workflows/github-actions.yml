name: GitHub Actions
on:
  push:
    branches: [dev, sandbox]
  pull_request:
    branches: [dev, sandbox]

jobs:
  api-tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "API TESTS"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - run: docker compose version

      - name: Install dependencies
        run: npm i

      - name: Run API tests (Mocha + Mochawesome, no NYC here)
        run: npm run test:api

      - name: Debug - API reports
        if: always()
        run: |
          echo "API test directory structure:"
          find ./api -type f -name "*.json" -o -name "*.html" | head -50
          echo "API reports dir:"
          ls -la ./api/test/reports || echo "No api reports dir"

      - name: Upload Mocha test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mocha-report
          path: ./api/test/reports

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "E2E TESTS"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - run: docker compose version

      - name: Install dependencies
        run: npm i

      - name: Run E2E tests (Cypress + mochawesome)
        run: npm run test:e2e

      - name: Debug - Cypress reports
        if: always()
        run: |
          echo "E2E reports dir:"
          ls -la ./end-to-end/cypress/reports || echo "No cypress reports dir"
          echo "E2E videos dir:"
          ls -la ./end-to-end/cypress/videos || echo "No cypress videos dir"

      - name: Upload Cypress video
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-video
          path: ./end-to-end/cypress/videos

      - name: Upload Cypress test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-reports
          path: ./end-to-end/cypress/reports

  api-coverage:
    runs-on: ubuntu-latest
    steps:
      - run: echo "API COVERAGE (NYC)"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install API deps
        run: |
          cd api
          npm ci

      - name: Run NYC coverage separately (override mocha reporter)
        run: |
          cd api
          npx nyc --reporter=lcov --reporter=text-summary mocha --config .mocharc.yaml --reporter dot

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage
          path: ./api/coverage

  deploy:
    needs: [api-tests, e2e-tests]
    runs-on: ubuntu-latest
    if: |
      always() && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Cypress reports artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: cypress-reports
          path: ./cypress-reports

      - name: Download Cypress videos artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: cypress-video
          path: ./cypress-videos

      - name: Download Mocha report artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: mocha-report
          path: ./mocha-report

      - name: Create site directory structure per PR
        env:
          PR_NUM: ${{ github.event.number }}
        run: |
          set -e
          mkdir -p site/reports/pr-${PR_NUM}
          # Copy reports
          mkdir -p site/reports/pr-${PR_NUM}/cypress
          cp -r cypress-reports/* site/reports/pr-${PR_NUM}/cypress/ 2>/dev/null || echo "No cypress reports to copy"
          mkdir -p site/reports/pr-${PR_NUM}/mocha
          cp -r mocha-report/* site/reports/pr-${PR_NUM}/mocha/ 2>/dev/null || echo "No mocha test reports to copy"
          mkdir -p site/reports/pr-${PR_NUM}/videos
          cp -r cypress-videos/* site/reports/pr-${PR_NUM}/videos/ 2>/dev/null || echo "No videos to copy"

      - name: Create per-PR landing index.html
        env:
          PR_NUM: ${{ github.event.number }}
        run: |
          cat > site/reports/pr-${PR_NUM}/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="fr">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Rapports PR</title>
              <style>
                body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; padding: 20px; }
                a { display:block; margin: 10px 0; font-size: 18px; }
              </style>
          </head>
          <body>
              <h1>Rapports pour cette PR</h1>
              <a href="./mocha/" target="_blank">‚û°Ô∏è Rapport Mocha (API)</a>
              <a href="./cypress/" target="_blank">‚û°Ô∏è Rapport Cypress (E2E)</a>
              <a href="./videos/" target="_blank">üé• Vid√©os Cypress</a>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Sticky PR comment with report links
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          header: mochawesome-reports
          message: |
            ‚úÖ Rapports disponibles pour cette PR:
            - Mocha (API): ${{ steps.deployment.outputs.page_url }}reports/pr-${{ github.event.number }}/mocha/
            - Cypress (E2E): ${{ steps.deployment.outputs.page_url }}reports/pr-${{ github.event.number }}/cypress/
