name: GitHub Actions
on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'site/**'
      - '**/*.md'
  pull_request:
    branches:
      - dev
      - sandbox
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to publish under reports/pr-<number>'
        required: true
        type: string

jobs:
  api-tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "API TESTS"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - run: docker compose version

      - name: Install dependencies
        run: npm i

      - name: Run API tests (Mocha + Mochawesome)
        run: npm run test:api
        continue-on-error: true

      - name: Debug - List API generated files
        if: always()
        run: |
          echo "API test directory structure:"
          find ./api -type f -name "*.json" -o -name "*.html" | head -20
          echo "API test reports:"
          ls -la ./api/test/ || echo "API test directory not found"
          echo "Files in api/test/:"
          find ./api/test/ -type f -exec ls -la {} \; 2>/dev/null || echo "No API test reports found"
          echo "Mochawesome specific files:"
          find ./api -name "*.html" -o -name "mochawesome*" 2>/dev/null || echo "No mochawesome files found"

      - name: Upload Mocha test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mocha-report
          path: ./api/test/reports
          if-no-files-found: warn

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "E2E TESTS"

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Checkout sandbox branch (for local sandbox stack)
        uses: actions/checkout@v4
        with:
          ref: sandbox
          path: sandbox-code

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - run: docker compose version

      - name: Install dependencies
        run: npm i

      - name: Run E2E tests (Cypress + mochawesome)
        env:
          SANDBOX_CODE_DIR: ${{ github.workspace }}/sandbox-code
          CY_JSON_ONLY: "1"
        run: npm run test:e2e
        continue-on-error: true

      - name: Debug - List E2E generated files
        if: always()
        run: |
          echo "=== END-TO-END TESTS DEBUG ==="
          echo "Listing end-to-end directory structure:"
          find ./end-to-end -type f -name "*.json" -o -name "*.html" | head -20
          echo "Reports directory content:"
          ls -la ./end-to-end/cypress/reports/ || echo "Reports directory not found"

      - name: Upload Cypress video
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-video
          path: ./end-to-end/cypress/videos

      - name: Upload Cypress test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-reports
          path: |
            ./end-to-end/cypress/reports/.jsons/*.json
            ./end-to-end/cypress/reports/*.json
          include-hidden-files: true
          if-no-files-found: warn

      - name: Upload Cypress downloads (Excel files)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-downloads
          path: |
            ./end-to-end/cypress/downloads/*.xlsx
            ./end-to-end/cypress/downloads/*.xls
          if-no-files-found: warn
  deploy:
    needs: [api-tests, e2e-tests]
    runs-on: ubuntu-latest
    if: |
      always() && (
        (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
        (github.event_name == 'workflow_dispatch') ||
        (github.event_name == 'push')
      )
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find pull request for push event
        id: findpr
        if: ${{ github.event_name == 'push' }}
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.ref.replace('refs/heads/','');
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`,
            });
            core.setOutput('pull-request-number', prs.length ? String(prs[0].number) : '');

      - name: Determine PR number
        id: prnum
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "pr=${{ github.event.number }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "pr=${{ inputs.pr_number }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "pr=${{ steps.findpr.outputs.pull-request-number }}" >> "$GITHUB_OUTPUT"
          else
            echo "pr=" >> "$GITHUB_OUTPUT"
          fi

      - name: Download Cypress reports artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: cypress-reports
          path: ./cypress-reports

      - name: Download Cypress videos artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: cypress-video
          path: ./cypress-videos

      - name: Download Mocha report artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: mocha-report
          path: ./mocha-report

      - name: Create site directory structure (per PR)
        env:
          PR_NUM: ${{ steps.prnum.outputs.pr }}
        run: |
          set -e
          mkdir -p site/reports/pr-${PR_NUM}
          mkdir -p site/reports/pr-${PR_NUM}/cypress
          cp -r cypress-reports/.jsons site/reports/pr-${PR_NUM}/cypress/ 2>/dev/null || true
          cp -r cypress-reports/*.json site/reports/pr-${PR_NUM}/cypress/ 2>/dev/null || echo "No cypress reports to copy"
          mkdir -p site/reports/pr-${PR_NUM}/videos
          cp -r cypress-videos/* site/reports/pr-${PR_NUM}/videos/ 2>/dev/null || echo "No videos to copy"
          mkdir -p site/reports/pr-${PR_NUM}/mocha
          cp -r mocha-report/* site/reports/pr-${PR_NUM}/mocha/ 2>/dev/null || echo "No mocha test reports to copy"

      - name: Build combined Mochawesome HTML (merged)
        env:
          PR_NUM: ${{ steps.prnum.outputs.pr }}
        run: |
          set -e
          docker run --rm -e PR_NUM="$PR_NUM" -v "$GITHUB_WORKSPACE:/work" -w /work node:22-alpine sh -lc '
            set -e
            npm i -g mochawesome-merge mochawesome-report-generator
            mkdir -p site/reports/pr-${PR_NUM}/combined
            JSONS="$(find mocha-report -type f -name "*.json" 2>/dev/null; find cypress-reports -type f -name "*.json" 2>/dev/null)"
            if [ -n "$JSONS" ]; then
              mochawesome-merge $JSONS > site/reports/pr-${PR_NUM}/combined/merged.json || true
            fi
            if [ -s site/reports/pr-${PR_NUM}/combined/merged.json ]; then
              node scripts/section-mochawesome.js site/reports/pr-${PR_NUM}/combined/merged.json site/reports/pr-${PR_NUM}/combined/sectioned.json || cp site/reports/pr-${PR_NUM}/combined/merged.json site/reports/pr-${PR_NUM}/combined/sectioned.json
              marge site/reports/pr-${PR_NUM}/combined/sectioned.json -o site/reports/pr-${PR_NUM}/combined -f a-just-tests-report --overwrite
            else
              echo "No JSONs to merge for combined report"
            fi
          '

      - name: Create per-PR landing index.html
        env:
          PR_NUM: ${{ steps.prnum.outputs.pr }}
        run: |
          mkdir -p site/reports/pr-${PR_NUM}
          cat > site/reports/pr-${PR_NUM}/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>PR Reports</title>
          </head>
          <body>
            <h1>Reports for PR ${PR_NUM}</h1>
            <ul>
              <li><a href="./combined/a-just-tests-report.html" target="_blank">Combined (API + E2E)</a></li>
              <li><a href="./mocha/" target="_blank">Mocha (API)</a></li>
              <li><a href="./cypress/" target="_blank">Cypress (E2E)</a></li>
              <li><a href="./videos/" target="_blank">Cypress Videos</a></li>
            </ul>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment PR with Combined report URL
        if: ${{ steps.prnum.outputs.pr != '' }}
        uses: actions/github-script@v7
        env:
          PR_NUM: ${{ steps.prnum.outputs.pr }}
        with:
          script: |
            const pageUrl = process.env.DEPLOYMENT_PAGE_URL || '${{ steps.deployment.outputs.page_url }}';
            const pr = process.env.PR_NUM;
            const url = `${pageUrl}reports/pr-${pr}/combined/a-just-tests-report.html`;
            const body = `âœ… Combined test report available: ${url}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number(pr),
              body
            });
